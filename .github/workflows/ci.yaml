name: CI flows

on:
  push:
    branches:
      - "**"

jobs:
  compile:
    name: Compile code
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.13.3"

      - name: Cache Hex
        id: cache-hex
        uses: actions/cache@v2
        with:
          path: |
            ./deps
            ~/.hex
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('mix.lock', '**/mix.exs') }}

      - name: Compile
        run: mix do deps.get, deps.compile, compile

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            ./_build
          key: ${{ runner.os }}-mix-build-${{ github.run_number }}

  mix-tests:
    name: Unit and integration tests
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Start test support services
        run: |
          epmd -daemon
          docker-compose -f ./docker/docker-compose.yaml up -d

      - name: Cache Hex
        uses: actions/cache@v2
        with:
          path: |
            ./deps
            ~/.hex
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('mix.lock', '**/mix.exs') }}

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.13.3"

      - run: MIX_ENV=test mix do deps.get, ecto.migrate
      - run: mix test --seed 0

      - name: Stop test support services
        if: always()
        run: |
          epmd -kill
          docker-compose -f ./docker/docker-compose.yaml down

  check-code-style:
    needs: compile
    name: Code style adherence
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Cache Hex
        uses: actions/cache@v2
        with:
          path: |
            ./deps
            ~/.hex
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('mix.lock', '**/mix.exs') }}
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.13.3"
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            ./_build
          key: ${{ runner.os }}-mix-build-${{ github.run_number }}
      - run: mix format --check-formatted

  credo-analysis:
    needs: compile
    name: Credo static analysis
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Cache Hex
        uses: actions/cache@v2
        with:
          path: |
            ./deps
            ~/.hex
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('mix.lock', '**/mix.exs') }}
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.13.3"
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            ./_build
          key: ${{ runner.os }}-mix-build-${{ github.run_number }}
      - run: mix credo suggest --all

  dialyzer-analysis:
    needs: compile
    name: Dialyzer static analysis
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Cache Hex
        uses: actions/cache@v2
        with:
          path: |
            ./deps
            ~/.hex
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('mix.lock', '**/mix.exs') }}
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: "24"
          elixir-version: "1.13.3"
      - name: Cache Dialyzer PLTs
        uses: actions/cache@v2
        id: plt_cache
        with:
          path: |
            ./priv/plts
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            ./_build
          key: ${{ runner.os }}-mix-build-${{ github.run_number }}
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer

  tf-validate:
    name: Terraform validation
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "0.13.7"
      - name: Check out code
        uses: actions/checkout@v2
      - run: |
          cd deploy/analytex
          terraform init --backend=false
          terraform validate
      - run: |
          cd deploy/bridge
          terraform init --backend=false
          terraform validate
